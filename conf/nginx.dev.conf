daemon off;
worker_processes  5;
user nginx;

load_module "modules/ngx_http_geoip_module.so";
error_log stderr info;

events {
  worker_connections  1024;
}

http {
  access_log /var/log/nginx/access.log;
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  charset utf-8;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  reset_timedout_connection on;
  client_max_body_size 50M;

  upstream django {
    server django:8000;
  }

  server {
    listen 80;

    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443;
    ssl on;
    ssl_certificate /run/secrets/SITE_SSL_CERT;
    ssl_certificate_key /run/secrets/SITE_SSL_KEY;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'AES128+EECDH:AES128+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    location /media_internal {
      internal;
      expires 0;
      alias /data/files/media;
    }

    location ~ ^/(api|admin|assets|media|explorer|rest-auth|__debug__|django-channels) {
      proxy_pass http://django;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }

    location /sockjs-node/ {
        proxy_pass http://build_js:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location / {
      proxy_pass http://build_js:3000;
    }

    location /coverage {
      alias /src/static/coverage_report;
    }

    location /docs {
      alias /src/docs/build;
    }

    location /ws {
      proxy_pass http://django;
      proxy_http_version 1.1;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $server_name;
    }
  }
}
