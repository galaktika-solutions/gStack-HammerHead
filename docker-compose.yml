version: "3.7"

volumes:
  data:

networks:
  default:

services:
  postgres:
    image: ${REGISTRY_URL}/${IMAGE_BASENAME}-main:${VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    command: ["postgres"]
    volumes:
      - "data:/data"
      - "./.secret.env:/src/.secret.env"
    env_file: .env
    ports:
      - "127.0.0.1:5432:5432"
    logging:
      driver: ${LOG_DRIVER}
      options:
        tag: "docker/${COMPOSE_PROJECT_NAME}-postgres"

  django:
    image: ${REGISTRY_URL}/${IMAGE_BASENAME}-main:${VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-django
    command: ["django"]
    depends_on: ["postgres"]
    volumes:
      - "data:/data"
      - "./.secret.env:/src/.secret.env"
    env_file: .env
    logging:
      driver: ${LOG_DRIVER}
      options:
        tag: "docker/${COMPOSE_PROJECT_NAME}-django"

  nginx:
    image: ${REGISTRY_URL}/${IMAGE_BASENAME}-main:${VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    depends_on: ["django"]
    command: ["nginx"]
    volumes:
      - "data:/data"
      - "./.secret.env:/src/.secret.env"
    env_file: .env
    ports:
      - "${SERVER_IP}:80:80"
      - "${SERVER_IP}:443:443"
    logging:
      driver: ${LOG_DRIVER}
      options:
        tag: "docker/${COMPOSE_PROJECT_NAME}-nginx"

  backup:
    image: ${REGISTRY_URL}/${IMAGE_BASENAME}-main:${VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-backup
    command: ["backup_daemon"]
    depends_on: ["postgres"]
    volumes:
      - "data:/data"
      - "./.secret.env:/src/.secret.env"
      - "./backup:/src/backup"
    env_file: .env
    logging:
      driver: ${LOG_DRIVER}
      options:
        tag: "docker/${COMPOSE_PROJECT_NAME}-backup"
